apply plugin: 'com.android.application'
apply plugin: 'com.google.dagger.hilt.android'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    signingConfigs {
        signing_config {
            storeFile file(prod_store_file_path)
            keyAlias prod_key_alias
            keyPassword prod_key_password
            storePassword prod_store_password
        }
    }
    compileSdkVersion 33
    defaultConfig {
        applicationId "fiskinfoo.no.sintef.fiskinfoo"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 49
        versionName "3.0.1.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                appAuthRedirectScheme: "no.sintef.fiskinfo.android"
        ]
        signingConfig signingConfigs.signing_config

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
    buildTypes {
        buildTypes.each {
//            Configs that apply to all build types can be placed here.
        }
        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

//          The following two values don't seem to work if fetched from properties file.
            buildConfigField("String", "SERVER_URL", "\"https://www.barentswatch.no/\"")
            buildConfigField("String", "SERVER_ID_URL", "\"https://id.barentswatch.no/\"")
//            buildConfigField("String", "SERVER_URL", prod_fiskinfo_server_url)
//            buildConfigField("String", "SERVER_ID_URL", prod_fiskinfo_server_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_ID", prod_fiskinfo_bwclientid)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SECRET", prod_fiskinfo_bwclientsecret)
            buildConfigField("String", "FISKINFO_BW_CLIENT_REDIRECT_URL", prod_fiskinfo_bwclient_redirect_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SCOPE", prod_fiskinfo_bwclient_scope)

            buildConfigField("String", "SPRICE_ORAP_SERVER_URL", "\"https://orap.met.no/\"")
            buildConfigField("String", "SPRICE_ORAP_SFTP_URL", "\"fog.met.no\"")
            buildConfigField("int", "SPRICE_ORAP_SFTP_PORT_NUMBER", prod_sprice_sftp_port_number)
            buildConfigField("String", "SPRICE_ORAP_SFTP_USER_NAME", prod_sprice_sftp_user_name)
            buildConfigField("String", "SPRICE_ORAP_SFTP_PASSWORD", prod_sprice_sftp_password)

            signingConfig signingConfigs.signing_config
        }
        DebugabbleRelease {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

//          The following two values don't seem to work if fetched from properties file.
            buildConfigField("String", "SERVER_URL", "\"https://www.barentswatch.no/\"")
            buildConfigField("String", "SERVER_ID_URL", "\"https://id.barentswatch.no/\"")
//            buildConfigField("String", "SERVER_URL", prod_fiskinfo_server_url)
//            buildConfigField("String", "SERVER_ID_URL", prod_fiskinfo_server_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_ID", prod_fiskinfo_bwclientid)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SECRET", prod_fiskinfo_bwclientsecret)
            buildConfigField("String", "FISKINFO_BW_CLIENT_REDIRECT_URL", prod_fiskinfo_bwclient_redirect_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SCOPE", prod_fiskinfo_bwclient_scope)

            buildConfigField("String", "SPRICE_ORAP_SERVER_URL", "\"https://orap.met.no/\"")
            buildConfigField("String", "SPRICE_ORAP_SFTP_URL", "\"fog.met.no\"")
            buildConfigField("int", "SPRICE_ORAP_SFTP_PORT_NUMBER", prod_sprice_sftp_port_number)
            buildConfigField("String", "SPRICE_ORAP_SFTP_USER_NAME", prod_sprice_sftp_user_name)
            buildConfigField("String", "SPRICE_ORAP_SFTP_PASSWORD", prod_sprice_sftp_password)

            signingConfig signingConfigs.signing_config
        }
        debug {
            debuggable true

//          The following two values don't seem to work if fetched from properties file.
            buildConfigField("String", "SERVER_URL", "\"https://pilot.barentswatch.net/\"")
            buildConfigField("String", "SERVER_ID_URL", "\"https://id.barentswatch.net/\"")
//            buildConfigField("String", "SERVER_URL", pilot_fiskinfo_server_url)
//            buildConfigField("String", "SERVER_ID_URL", pilot_fiskinfo_server_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_ID", pilot_fiskinfo_bwclientid)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SECRET", pilot_fiskinfo_bwclientsecret)
            buildConfigField("String", "FISKINFO_BW_CLIENT_REDIRECT_URL", pilot_fiskinfo_bwclient_redirect_url)
            buildConfigField("String", "FISKINFO_BW_CLIENT_SCOPE", pilot_fiskinfo_bwclient_scope)

            buildConfigField("String", "SPRICE_ORAP_SERVER_URL", "\"https://orap.met.no/\"")
            buildConfigField("String", "SPRICE_ORAP_SFTP_URL", "\"fog.met.no\"")
            buildConfigField("int", "SPRICE_ORAP_SFTP_PORT_NUMBER", prod_sprice_sftp_port_number)
            buildConfigField("String", "SPRICE_ORAP_SFTP_USER_NAME", prod_sprice_sftp_user_name)
            buildConfigField("String", "SPRICE_ORAP_SFTP_PASSWORD", prod_sprice_sftp_password)

        }
    }
    namespace 'no.sintef.fiskinfo'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0"
    implementation 'androidx.appcompat:appcompat:1.6.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.concurrent:concurrent-futures:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'com.google.dagger:dagger:2.44.2'
    implementation 'com.google.code.gson:gson:2.10.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'

    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.5.0'
    implementation 'net.openid:appauth:0.11.1'
    implementation 'net.sourceforge.streamsupport:android-retrofuture:1.7.2'
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    // Room database
    def room_version = "2.5.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.44.2'
    kapt 'com.google.dagger:hilt-compiler:2.44.2'
    kapt 'com.google.dagger:hilt-android-compiler:2.44.2'

    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.44.2'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-compiler:2.44.2'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.44.2'
    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.44.2'
}
